/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const t="167",s={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e=0,r=1,n=2,h=3,a=0,o=1,c=2,l=3,u=0,m=1,y=2,d=0,x=1,p=2,M=3,g=4,f=5,z=100,_=101,w=102,b=103,S=104,k=200,C=201,V=202,P=203,T=204,q=205,A=206,E=207,F=208,v=209,B=210,R=211,I=212,L=213,Y=214,N=0,H=1,Z=2,X=3,O=4,D=5,W=6,G=7,j=0,Q=1,U=2,$=0,J=1,K=2,tt=3,st=4,it=5,et=6,rt=7,nt="attached",ht="detached",at=300,ot=301,ct=302,lt=303,ut=304,mt=306,yt=1e3,dt=1001,xt=1002,pt=1003,Mt=1004,gt=1004,ft=1005,zt=1005,_t=1006,wt=1007,bt=1007,St=1008,kt=1008,Ct=1009,Vt=1010,Pt=1011,Tt=1012,qt=1013,At=1014,Et=1015,Ft=1016,vt=1017,Bt=1018,Rt=1020,It=35902,Lt=1021,Yt=1022,Nt=1023,Ht=1024,Zt=1025,Xt=1026,Ot=1027,Dt=1028,Wt=1029,Gt=1030,jt=1031,Qt=1032,Ut=1033,$t=33776,Jt=33777,Kt=33778,ts=33779,ss=35840,is=35841,es=35842,rs=35843,ns=36196,hs=37492,as=37496,os=37808,cs=37809,ls=37810,us=37811,ms=37812,ys=37813,ds=37814,xs=37815,ps=37816,Ms=37817,gs=37818,fs=37819,zs=37820,_s=37821,ws=36492,bs=36494,Ss=36495,ks=36283,Cs=36284,Vs=36285,Ps=36286,Ts=2200,qs=2201,As=2202,Es=2300,Fs=2301,vs=2302,Bs=2400,Rs=2401,Is=2402,Ls=2500,Ys=2501,Ns=0,Hs=1,Zs=2,Xs=3200,Os=3201,Ds=3202,Ws=3203,Gs=0,js=1,Qs="",Us="srgb",$s="srgb-linear",Js="display-p3",Ks="display-p3-linear",ti="linear",si="srgb",ii="rec709",ei="p3",ri=0,ni=7680,hi=7681,ai=7682,oi=7683,ci=34055,li=34056,ui=5386,mi=512,yi=513,di=514,xi=515,pi=516,Mi=517,gi=518,fi=519,zi=512,_i=513,wi=514,bi=515,Si=516,ki=517,Ci=518,Vi=519,Pi=35044,Ti=35048,qi=35040,Ai=35045,Ei=35049,Fi=35041,vi=35046,Bi=35050,Ri=35042,Ii="100",Li="300 es",Yi=2e3,Ni=2001;class Hi{constructor(t,s,i,e){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==e?e:new s.constructor(i),this.sampleValues=s,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const s=this.parameterPositions;let i=this._cachedIndex,e=s[i],r=s[i-1];t:{s:{let n;i:{e:if(!(t<e)){for(let n=i+2;;){if(void 0===e){if(t<r)break e;return i=s.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===n)break;if(r=e,e=s[++i],t<e)break s}n=s.length;break i}if(t>=r)break t;{const h=s[1];t<h&&(i=2,r=h);for(let n=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===n)break;if(e=r,r=s[--i-1],t>=r)break s}n=i,i=0}}for(;i<n;){const e=i+n>>>1;t<s[e]?n=e:i=e+1}if(e=s[i],r=s[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===e)return i=s.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,e)}return this.interpolate_(i,r,t,e)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const s=this.resultBuffer,i=this.sampleValues,e=this.valueSize,r=t*e;for(let t=0;t!==e;++t)s[t]=i[r+t];return s}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}const Zi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Xi=1234567;const Oi=Math.PI/180,Di=180/Math.PI;function Wi(t,s,i){return Math.max(s,Math.min(i,t))}function Gi(t,s){return(t%s+s)%s}function ji(t,s,i){return(1-i)*t+i*s}const Qi={DEG2RAD:Oi,RAD2DEG:Di,generateUUID:function(){const t=4294967295*Math.random()|0,s=4294967295*Math.random()|0,i=4294967295*Math.random()|0,e=4294967295*Math.random()|0;return(Zi[255&t]+Zi[t>>8&255]+Zi[t>>16&255]+Zi[t>>24&255]+"-"+Zi[255&s]+Zi[s>>8&255]+"-"+Zi[s>>16&15|64]+Zi[s>>24&255]+"-"+Zi[63&i|128]+Zi[i>>8&255]+"-"+Zi[i>>16&255]+Zi[i>>24&255]+Zi[255&e]+Zi[e>>8&255]+Zi[e>>16&255]+Zi[e>>24&255]).toLowerCase()},clamp:Wi,euclideanModulo:Gi,mapLinear:function(t,s,i,e,r){return e+(t-s)*(r-e)/(i-s)},inverseLerp:function(t,s,i){return t!==s?(i-t)/(s-t):0},lerp:ji,damp:function(t,s,i,e){return ji(t,s,1-Math.exp(-i*e))},pingpong:function(t,s=1){return s-Math.abs(Gi(t,2*s)-s)},smoothstep:function(t,s,i){return t<=s?0:t>=i?1:(t=(t-s)/(i-s))*t*(3-2*t)},smootherstep:function(t,s,i){return t<=s?0:t>=i?1:(t=(t-s)/(i-s))*t*t*(t*(6*t-15)+10)},randInt:function(t,s){return t+Math.floor(Math.random()*(s-t+1))},randFloat:function(t,s){return t+Math.random()*(s-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(Xi=t);let s=Xi+=1831565813;return s=Math.imul(s^s>>>15,1|s),s^=s+Math.imul(s^s>>>7,61|s),((s^s>>>14)>>>0)/4294967296},degToRad:function(t){return t*Oi},radToDeg:function(t){return t*Di},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,s,i,e,r){const n=Math.cos,h=Math.sin,a=n(i/2),o=h(i/2),c=n((s+e)/2),l=h((s+e)/2),u=n((s-e)/2),m=h((s-e)/2),y=n((e-s)/2),d=h((e-s)/2);switch(r){case"XYX":t.set(a*l,o*u,o*m,a*c);break;case"YZY":t.set(o*m,a*l,o*u,a*c);break;case"ZXZ":t.set(o*u,o*m,a*l,a*c);break;case"XZX":t.set(a*l,o*d,o*y,a*c);break;case"YXY":t.set(o*y,a*l,o*d,a*c);break;case"ZYZ":t.set(o*d,o*y,a*l,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:function(t,s){switch(s.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}},denormalize:function(t,s){switch(s.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}};class Ui{constructor(t=0,s=0,i=0,e=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=e}static slerpFlat(t,s,i,e,r,n,h){let a=i[e+0],o=i[e+1],c=i[e+2],l=i[e+3];const u=r[n+0],m=r[n+1],y=r[n+2],d=r[n+3];if(0===h)return t[s+0]=a,t[s+1]=o,t[s+2]=c,void(t[s+3]=l);if(1===h)return t[s+0]=u,t[s+1]=m,t[s+2]=y,void(t[s+3]=d);if(l!==d||a!==u||o!==m||c!==y){let t=1-h;const s=a*u+o*m+c*y+l*d,i=s>=0?1:-1,e=1-s*s;if(e>Number.EPSILON){const r=Math.sqrt(e),n=Math.atan2(r,s*i);t=Math.sin(t*n)/r,h=Math.sin(h*n)/r}const r=h*i;if(a=a*t+u*r,o=o*t+m*r,c=c*t+y*r,l=l*t+d*r,t===1-h){const t=1/Math.sqrt(a*a+o*o+c*c+l*l);a*=t,o*=t,c*=t,l*=t}}t[s]=a,t[s+1]=o,t[s+2]=c,t[s+3]=l}static multiplyQuaternionsFlat(t,s,i,e,r,n){const h=i[e],a=i[e+1],o=i[e+2],c=i[e+3],l=r[n],u=r[n+1],m=r[n+2],y=r[n+3];return t[s]=h*y+c*l+a*m-o*u,t[s+1]=a*y+c*u+o*l-h*m,t[s+2]=o*y+c*m+h*u-a*l,t[s+3]=c*y-h*l-a*u-o*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const i=t._x,e=t._y,r=t._z,n=t._order,h=Math.cos,a=Math.sin,o=h(i/2),c=h(e/2),l=h(r/2),u=a(i/2),m=a(e/2),y=a(r/2);switch(n){case"XYZ":this._x=u*c*l+o*m*y,this._y=o*m*l-u*c*y,this._z=o*c*y+u*m*l,this._w=o*c*l-u*m*y;break;case"YXZ":this._x=u*c*l+o*m*y,this._y=o*m*l-u*c*y,this._z=o*c*y-u*m*l,this._w=o*c*l+u*m*y;break;case"ZXY":this._x=u*c*l-o*m*y,this._y=o*m*l+u*c*y,this._z=o*c*y+u*m*l,this._w=o*c*l-u*m*y;break;case"ZYX":this._x=u*c*l-o*m*y,this._y=o*m*l+u*c*y,this._z=o*c*y-u*m*l,this._w=o*c*l+u*m*y;break;case"YZX":this._x=u*c*l+o*m*y,this._y=o*m*l+u*c*y,this._z=o*c*y-u*m*l,this._w=o*c*l-u*m*y;break;case"XZY":this._x=u*c*l-o*m*y,this._y=o*m*l-u*c*y,this._z=o*c*y+u*m*l,this._w=o*c*l+u*m*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return!0===s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],r=s[8],n=s[1],h=s[5],a=s[9],o=s[2],c=s[6],l=s[10],u=i+h+l;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-a)*t,this._y=(r-o)*t,this._z=(n-e)*t}else if(i>h&&i>l){const t=2*Math.sqrt(1+i-h-l);this._w=(c-a)/t,this._x=.25*t,this._y=(e+n)/t,this._z=(r+o)/t}else if(h>l){const t=2*Math.sqrt(1+h-i-l);this._w=(r-o)/t,this._x=(e+n)/t,this._y=.25*t,this._z=(a+c)/t}else{const t=2*Math.sqrt(1+l-i-h);this._w=(n-e)/t,this._x=(r+o)/t,this._y=(a+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Wi(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(0===i)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,r=t._z,n=t._w,h=s._x,a=s._y,o=s._z,c=s._w;return this._x=i*c+n*h+e*o-r*a,this._y=e*c+n*a+r*h-i*o,this._z=r*c+n*o+i*a-e*h,this._w=n*c-i*h-e*a-r*o,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const i=this._x,e=this._y,r=this._z,n=this._w;let h=n*t._w+i*t._x+e*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=i,this._y=e,this._z=r,this;const a=1-h*h;if(a<=Number.EPSILON){const t=1-s;return this._w=t*n+s*this._w,this._x=t*i+s*this._x,this._y=t*e+s*this._y,this._z=t*r+s*this._z,this.normalize(),this}const o=Math.sqrt(a),c=Math.atan2(o,h),l=Math.sin((1-s)*c)/o,u=Math.sin(s*c)/o;return this._w=n*l+this._w*u,this._x=i*l+this._x*u,this._y=e*l+this._y*u,this._z=r*l+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),i=Math.random(),e=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(e*Math.sin(t),e*Math.cos(t),r*Math.sin(s),r*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class $i extends Hi{constructor(t,s,i,e){super(t,s,i,e)}interpolate_(t,s,i,e){const r=this.resultBuffer,n=this.sampleValues,h=this.valueSize,a=(i-s)/(e-s);let o=t*h;for(let t=o+h;o!==t;o+=4)Ui.slerpFlat(r,0,n,o-h,n,o,a);return r}}class Ji extends Hi{constructor(t,s,i,e){super(t,s,i,e)}interpolate_(t,s,i,e){const r=this.resultBuffer,n=this.sampleValues,h=this.valueSize,a=t*h,o=a-h,c=(i-s)/(e-s),l=1-c;for(let t=0;t!==h;++t)r[t]=n[o+t]*l+n[a+t]*c;return r}}class Ki extends Hi{constructor(t,s,i,e){super(t,s,i,e)}interpolate_(t){return this.copySampleValue_(t-1)}}class te extends Hi{constructor(t,s,i,e){super(t,s,i,e),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Bs,endingEnd:Bs}}intervalChanged_(t,s,i){const e=this.parameterPositions;let r=t-2,n=t+1,h=e[r],a=e[n];if(void 0===h)switch(this.getSettings_().endingStart){case Rs:r=t,h=2*s-i;break;case Is:r=e.length-2,h=s+e[r]-e[r+1];break;default:r=t,h=i}if(void 0===a)switch(this.getSettings_().endingEnd){case Rs:n=t,a=2*i-s;break;case Is:n=1,a=i+e[1]-e[0];break;default:n=t-1,a=s}const o=.5*(i-s),c=this.valueSize;this._weightPrev=o/(s-h),this._weightNext=o/(a-i),this._offsetPrev=r*c,this._offsetNext=n*c}interpolate_(t,s,i,e){const r=this.resultBuffer,n=this.sampleValues,h=this.valueSize,a=t*h,o=a-h,c=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,m=this._weightNext,y=(i-s)/(e-s),d=y*y,x=d*y,p=-u*x+2*u*d-u*y,M=(1+u)*x+(-1.5-2*u)*d+(-.5+u)*y+1,g=(-1-m)*x+(1.5+m)*d+.5*y,f=m*x-m*d;for(let t=0;t!==h;++t)r[t]=p*n[c+t]+M*n[o+t]+g*n[a+t]+f*n[l+t];return r}}class se{constructor(t=0,s=0,i=0){se.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return void 0===i&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(ee.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(ee.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6]*e,this.y=r[1]*s+r[4]*i+r[7]*e,this.z=r[2]*s+r[5]*i+r[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=t.elements,n=1/(r[3]*s+r[7]*i+r[11]*e+r[15]);return this.x=(r[0]*s+r[4]*i+r[8]*e+r[12])*n,this.y=(r[1]*s+r[5]*i+r[9]*e+r[13])*n,this.z=(r[2]*s+r[6]*i+r[10]*e+r[14])*n,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,r=t.x,n=t.y,h=t.z,a=t.w,o=2*(n*e-h*i),c=2*(h*s-r*e),l=2*(r*i-n*s);return this.x=s+a*o+n*l-h*c,this.y=i+a*c+h*o-r*l,this.z=e+a*l+r*c-n*o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*e,this.y=r[1]*s+r[5]*i+r[9]*e,this.z=r[2]*s+r[6]*i+r[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,r=t.z,n=s.x,h=s.y,a=s.z;return this.x=e*a-r*h,this.y=r*n-i*a,this.z=i*h-e*n,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return ie.copy(this).projectOnVector(t),this.sub(ie)}reflect(t){return this.sub(ie.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(Wi(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=2*Math.random()-1,i=Math.sqrt(1-s*s);return this.x=i*Math.cos(t),this.y=s,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ie=new se,ee=new Ui,re=new se,ne=new se,he=new se,ae=new se,oe=new se,ce=new se,le=new se,ue=new se,me=new se,ye=new se;class de{constructor(t=new se,s=new se,i=new se){this.a=t,this.b=s,this.c=i}static getNormal(t,s,i,e){e.subVectors(i,s),re.subVectors(t,s),e.cross(re);const r=e.lengthSq();return r>0?e.multiplyScalar(1/Math.sqrt(r)):e.set(0,0,0)}static getBarycoord(t,s,i,e,r){re.subVectors(e,s),ne.subVectors(i,s),he.subVectors(t,s);const n=re.dot(re),h=re.dot(ne),a=re.dot(he),o=ne.dot(ne),c=ne.dot(he),l=n*o-h*h;if(0===l)return r.set(0,0,0),null;const u=1/l,m=(o*a-h*c)*u,y=(n*c-h*a)*u;return r.set(1-m-y,y,m)}static containsPoint(t,s,i,e){return null!==this.getBarycoord(t,s,i,e,ae)&&(ae.x>=0&&ae.y>=0&&ae.x+ae.y<=1)}static getInterpolation(t,s,i,e,r,n,h,a){return null===this.getBarycoord(t,s,i,e,ae)?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(r,ae.x),a.addScaledVector(n,ae.y),a.addScaledVector(h,ae.z),a)}static isFrontFacing(t,s,i,e){return re.subVectors(i,s),ne.subVectors(t,s),re.cross(ne).dot(e)<0}set(t,s,i){return this.a.copy(t),this.b.copy(s),this.c.copy(i),this}setFromPointsAndIndices(t,s,i,e){return this.a.copy(t[s]),this.b.copy(t[i]),this.c.copy(t[e]),this}setFromAttributeAndIndices(t,s,i,e){return this.a.fromBufferAttribute(t,s),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return re.subVectors(this.c,this.b),ne.subVectors(this.a,this.b),.5*re.cross(ne).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return de.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,s){return de.getBarycoord(t,this.a,this.b,this.c,s)}getInterpolation(t,s,i,e,r){return de.getInterpolation(t,this.a,this.b,this.c,s,i,e,r)}containsPoint(t){return de.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return de.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,s){const i=this.a,e=this.b,r=this.c;let n,h;oe.subVectors(e,i),ce.subVectors(r,i),ue.subVectors(t,i);const a=oe.dot(ue),o=ce.dot(ue);if(a<=0&&o<=0)return s.copy(i);me.subVectors(t,e);const c=oe.dot(me),l=ce.dot(me);if(c>=0&&l<=c)return s.copy(e);const u=a*l-c*o;if(u<=0&&a>=0&&c<=0)return n=a/(a-c),s.copy(i).addScaledVector(oe,n);ye.subVectors(t,r);const m=oe.dot(ye),y=ce.dot(ye);if(y>=0&&m<=y)return s.copy(r);const d=m*o-a*y;if(d<=0&&o>=0&&y<=0)return h=o/(o-y),s.copy(i).addScaledVector(ce,h);const x=c*y-m*l;if(x<=0&&l-c>=0&&m-y>=0)return le.subVectors(r,e),h=(l-c)/(l-c+(m-y)),s.copy(e).addScaledVector(le,h);const p=1/(x+d+u);return n=d*p,h=u*p,s.copy(i).addScaledVector(oe,n).addScaledVector(ce,h)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}class xe{constructor(t=1,s=0,i=0){return this.radius=t,this.phi=s,this.theta=i,this}set(t,s,i){return this.radius=t,this.phi=s,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,s,i){return this.radius=Math.sqrt(t*t+s*s+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Wi(s/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class pe{constructor(t=1,s=0,i=0){return this.radius=t,this.theta=s,this.y=i,this}set(t,s,i){return this.radius=t,this.theta=s,this.y=i,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,s,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=s,this}clone(){return(new this.constructor).copy(this)}}class Me{constructor(t,s,i,e,r,n,h,a,o){Me.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,s,i,e,r,n,h,a,o)}set(t,s,i,e,r,n,h,a,o){const c=this.elements;return c[0]=t,c[1]=e,c[2]=h,c[3]=s,c[4]=r,c[5]=a,c[6]=i,c[7]=n,c[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],h=i[3],a=i[6],o=i[1],c=i[4],l=i[7],u=i[2],m=i[5],y=i[8],d=e[0],x=e[3],p=e[6],M=e[1],g=e[4],f=e[7],z=e[2],_=e[5],w=e[8];return r[0]=n*d+h*M+a*z,r[3]=n*x+h*g+a*_,r[6]=n*p+h*f+a*w,r[1]=o*d+c*M+l*z,r[4]=o*x+c*g+l*_,r[7]=o*p+c*f+l*w,r[2]=u*d+m*M+y*z,r[5]=u*x+m*g+y*_,r[8]=u*p+m*f+y*w,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],c=t[8];return s*n*c-s*h*o-i*r*c+i*h*a+e*r*o-e*n*a}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],c=t[8],l=c*n-h*o,u=h*a-c*r,m=o*r-n*a,y=s*l+i*u+e*m;if(0===y)return this.set(0,0,0,0,0,0,0,0,0);const d=1/y;return t[0]=l*d,t[1]=(e*o-c*i)*d,t[2]=(h*i-e*n)*d,t[3]=u*d,t[4]=(c*s-e*a)*d,t[5]=(e*r-h*s)*d,t[6]=m*d,t[7]=(i*a-o*s)*d,t[8]=(n*s-i*r)*d,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,r,n,h){const a=Math.cos(r),o=Math.sin(r);return this.set(i*a,i*o,-i*(a*n+o*h)+n+t,-e*o,e*a,-e*(-o*n+a*h)+h+s,0,0,1),this}scale(t,s){return this.premultiply(ge.makeScale(t,s)),this}rotate(t){return this.premultiply(ge.makeRotation(-t)),this}translate(t,s){return this.premultiply(ge.makeTranslation(t,s)),this}makeTranslation(t,s){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,i,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,i=t.elements;for(let t=0;t<9;t++)if(s[t]!==i[t])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const ge=new Me,fe=new se,ze=new se,_e=new Me;class we{constructor(t=new se(1,0,0),s=0){this.isPlane=!0,this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,i,e){return this.normal.set(t,s,i),this.constant=e,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,i){const e=fe.subVectors(i,s).cross(ze.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,s){const i=t.delta(fe),e=this.normal.dot(i);if(0===e)return 0===this.distanceToPoint(t.start)?s.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/e;return r<0||r>1?null:s.copy(t.start).addScaledVector(i,r)}intersectsLine(t){const s=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return s<0&&i>0||i<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const i=s||_e.getNormalMatrix(t),e=this.coplanarPoint(fe).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-e.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}class be{constructor(t=new se(1/0,1/0,1/0),s=new se(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s+=3)this.expandByPoint(ke.fromArray(t,s));return this}setFromBufferAttribute(t){this.makeEmpty();for(let s=0,i=t.count;s<i;s++)this.expandByPoint(ke.fromBufferAttribute(t,s));return this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=ke.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const e=i.getAttribute("position");if(!0===s&&void 0!==e&&!0!==t.isInstancedMesh)for(let s=0,i=e.count;s<i;s++)!0===t.isMesh?t.getVertexPosition(s,ke):ke.fromBufferAttribute(e,s),ke.applyMatrix4(t.matrixWorld),this.expandByPoint(ke);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),Ce.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),Ce.copy(i.boundingBox)),Ce.applyMatrix4(t.matrixWorld),this.union(Ce)}const e=t.children;for(let t=0,i=e.length;t<i;t++)this.expandByObject(e[t],s);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ke),ke.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Fe),ve.subVectors(this.max,Fe),Ve.subVectors(t.a,Fe),Pe.subVectors(t.b,Fe),Te.subVectors(t.c,Fe),qe.subVectors(Pe,Ve),Ae.subVectors(Te,Pe),Ee.subVectors(Ve,Te);let s=[0,-qe.z,qe.y,0,-Ae.z,Ae.y,0,-Ee.z,Ee.y,qe.z,0,-qe.x,Ae.z,0,-Ae.x,Ee.z,0,-Ee.x,-qe.y,qe.x,0,-Ae.y,Ae.x,0,-Ee.y,Ee.x,0];return!!Ie(s,Ve,Pe,Te,ve)&&(s=[1,0,0,0,1,0,0,0,1],!!Ie(s,Ve,Pe,Te,ve)&&(Be.crossVectors(qe,Ae),s=[Be.x,Be.y,Be.z],Ie(s,Ve,Pe,Te,ve)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ke).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(ke).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Se[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Se[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Se[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Se[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Se[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Se[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Se[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Se[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Se)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Se=[new se,new se,new se,new se,new se,new se,new se,new se],ke=new se,Ce=new be,Ve=new se,Pe=new se,Te=new se,qe=new se,Ae=new se,Ee=new se,Fe=new se,ve=new se,Be=new se,Re=new se;function Ie(t,s,i,e,r){for(let n=0,h=t.length-3;n<=h;n+=3){Re.fromArray(t,n);const h=r.x*Math.abs(Re.x)+r.y*Math.abs(Re.y)+r.z*Math.abs(Re.z),a=s.dot(Re),o=i.dot(Re),c=e.dot(Re);if(Math.max(-Math.max(a,o,c),Math.min(a,o,c))>h)return!1}return!0}const Le=new be,Ye=new se,Ne=new se;class He{constructor(t=new se,s=-1){this.isSphere=!0,this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;void 0!==s?i.copy(s):Le.setFromPoints(t).getCenter(i);let e=0;for(let s=0,r=t.length;s<r;s++)e=Math.max(e,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ye.subVectors(t,this.center);const s=Ye.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),i=.5*(t-this.radius);this.center.addScaledVector(Ye,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(Ne.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ye.copy(t.center).add(Ne)),this.expandByPoint(Ye.copy(t.center).sub(Ne))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ze=new He,Xe=new se;class Oe{constructor(t=new we,s=new we,i=new we,e=new we,r=new we,n=new we){this.planes=[t,s,i,e,r,n]}set(t,s,i,e,r,n){const h=this.planes;return h[0].copy(t),h[1].copy(s),h[2].copy(i),h[3].copy(e),h[4].copy(r),h[5].copy(n),this}copy(t){const s=this.planes;for(let i=0;i<6;i++)s[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,s=2e3){const i=this.planes,e=t.elements,r=e[0],n=e[1],h=e[2],a=e[3],o=e[4],c=e[5],l=e[6],u=e[7],m=e[8],y=e[9],d=e[10],x=e[11],p=e[12],M=e[13],g=e[14],f=e[15];if(i[0].setComponents(a-r,u-o,x-m,f-p).normalize(),i[1].setComponents(a+r,u+o,x+m,f+p).normalize(),i[2].setComponents(a+n,u+c,x+y,f+M).normalize(),i[3].setComponents(a-n,u-c,x-y,f-M).normalize(),i[4].setComponents(a-h,u-l,x-d,f-g).normalize(),s===Yi)i[5].setComponents(a+h,u+l,x+d,f+g).normalize();else{if(s!==Ni)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+s);i[5].setComponents(h,l,d,g).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),Ze.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const s=t.geometry;null===s.boundingSphere&&s.computeBoundingSphere(),Ze.copy(s.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ze)}intersectsSprite(t){return Ze.center.set(0,0,0),Ze.radius=.7071067811865476,Ze.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ze)}intersectsSphere(t){const s=this.planes,i=t.center,e=-t.radius;for(let t=0;t<6;t++){if(s[t].distanceToPoint(i)<e)return!1}return!0}intersectsBox(t){const s=this.planes;for(let i=0;i<6;i++){const e=s[i];if(Xe.x=e.normal.x>0?t.max.x:t.min.x,Xe.y=e.normal.y>0?t.max.y:t.min.y,Xe.z=e.normal.z>0?t.max.z:t.min.z,e.distanceToPoint(Xe)<0)return!1}return!0}containsPoint(t){const s=this.planes;for(let i=0;i<6;i++)if(s[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const De=new se,We=new se,Ge=new se,je=new se,Qe=new se,Ue=new se,$e=new se;class Je{constructor(t=new se,s=new se(0,0,-1)){this.origin=t,this.direction=s}set(t,s){return this.origin.copy(t),this.direction.copy(s),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,s){return s.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,De)),this}closestPointToPoint(t,s){s.subVectors(t,this.origin);const i=s.dot(this.direction);return i<0?s.copy(this.origin):s.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const s=De.subVectors(t,this.origin).dot(this.direction);return s<0?this.origin.distanceToSquared(t):(De.copy(this.origin).addScaledVector(this.direction,s),De.distanceToSquared(t))}distanceSqToSegment(t,s,i,e){We.copy(t).add(s).multiplyScalar(.5),Ge.copy(s).sub(t).normalize(),je.copy(this.origin).sub(We);const r=.5*t.distanceTo(s),n=-this.direction.dot(Ge),h=je.dot(this.direction),a=-je.dot(Ge),o=je.lengthSq(),c=Math.abs(1-n*n);let l,u,m,y;if(c>0)if(l=n*a-h,u=n*h-a,y=r*c,l>=0)if(u>=-y)if(u<=y){const t=1/c;l*=t,u*=t,m=l*(l+n*u+2*h)+u*(n*l+u+2*a)+o}else u=r,l=Math.max(0,-(n*u+h)),m=-l*l+u*(u+2*a)+o;else u=-r,l=Math.max(0,-(n*u+h)),m=-l*l+u*(u+2*a)+o;else u<=-y?(l=Math.max(0,-(-n*r+h)),u=l>0?-r:Math.min(Math.max(-r,-a),r),m=-l*l+u*(u+2*a)+o):u<=y?(l=0,u=Math.min(Math.max(-r,-a),r),m=u*(u+2*a)+o):(l=Math.max(0,-(n*r+h)),u=l>0?r:Math.min(Math.max(-r,-a),r),m=-l*l+u*(u+2*a)+o);else u=n>0?-r:r,l=Math.max(0,-(n*u+h)),m=-l*l+u*(u+2*a)+o;return i&&i.copy(this.origin).addScaledVector(this.direction,l),e&&e.copy(We).addScaledVector(Ge,u),m}intersectSphere(t,s){De.subVectors(t.center,this.origin);const i=De.dot(this.direction),e=De.dot(De)-i*i,r=t.radius*t.radius;if(e>r)return null;const n=Math.sqrt(r-e),h=i-n,a=i+n;return a<0?null:h<0?this.at(a,s):this.at(h,s)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const s=t.normal.dot(this.direction);if(0===s)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/s;return i>=0?i:null}intersectPlane(t,s){const i=this.distanceToPlane(t);return null===i?null:this.at(i,s)}intersectsPlane(t){const s=t.distanceToPoint(this.origin);if(0===s)return!0;return t.normal.dot(this.direction)*s<0}intersectBox(t,s){let i,e,r,n,h,a;const o=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return o>=0?(i=(t.min.x-u.x)*o,e=(t.max.x-u.x)*o):(i=(t.max.x-u.x)*o,e=(t.min.x-u.x)*o),c>=0?(r=(t.min.y-u.y)*c,n=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,n=(t.min.y-u.y)*c),i>n||r>e?null:((r>i||isNaN(i))&&(i=r),(n<e||isNaN(e))&&(e=n),l>=0?(h=(t.min.z-u.z)*l,a=(t.max.z-u.z)*l):(h=(t.max.z-u.z)*l,a=(t.min.z-u.z)*l),i>a||h>e?null:((h>i||i!=i)&&(i=h),(a<e||e!=e)&&(e=a),e<0?null:this.at(i>=0?i:e,s)))}intersectsBox(t){return null!==this.intersectBox(t,De)}intersectTriangle(t,s,i,e,r){Qe.subVectors(s,t),Ue.subVectors(i,t),$e.crossVectors(Qe,Ue);let n,h=this.direction.dot($e);if(h>0){if(e)return null;n=1}else{if(!(h<0))return null;n=-1,h=-h}je.subVectors(this.origin,t);const a=n*this.direction.dot(Ue.crossVectors(je,Ue));if(a<0)return null;const o=n*this.direction.dot(Qe.cross(je));if(o<0)return null;if(a+o>h)return null;const c=-n*je.dot($e);return c<0?null:this.at(c/h,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ke{constructor(t,s,i,e,r,n,h,a,o,c,l,u,m,y,d,x){Ke.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,s,i,e,r,n,h,a,o,c,l,u,m,y,d,x)}set(t,s,i,e,r,n,h,a,o,c,l,u,m,y,d,x){const p=this.elements;return p[0]=t,p[4]=s,p[8]=i,p[12]=e,p[1]=r,p[5]=n,p[9]=h,p[13]=a,p[2]=o,p[6]=c,p[10]=l,p[14]=u,p[3]=m,p[7]=y,p[11]=d,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ke).fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,e=1/tr.setFromMatrixColumn(t,0).length(),r=1/tr.setFromMatrixColumn(t,1).length(),n=1/tr.setFromMatrixColumn(t,2).length();return s[0]=i[0]*e,s[1]=i[1]*e,s[2]=i[2]*e,s[3]=0,s[4]=i[4]*r,s[5]=i[5]*r,s[6]=i[6]*r,s[7]=0,s[8]=i[8]*n,s[9]=i[9]*n,s[10]=i[10]*n,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,i=t.x,e=t.y,r=t.z,n=Math.cos(i),h=Math.sin(i),a=Math.cos(e),o=Math.sin(e),c=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){const t=n*c,i=n*l,e=h*c,r=h*l;s[0]=a*c,s[4]=-a*l,s[8]=o,s[1]=i+e*o,s[5]=t-r*o,s[9]=-h*a,s[2]=r-t*o,s[6]=e+i*o,s[10]=n*a}else if("YXZ"===t.order){const t=a*c,i=a*l,e=o*c,r=o*l;s[0]=t+r*h,s[4]=e*h-i,s[8]=n*o,s[1]=n*l,s[5]=n*c,s[9]=-h,s[2]=i*h-e,s[6]=r+t*h,s[10]=n*a}else if("ZXY"===t.order){const t=a*c,i=a*l,e=o*c,r=o*l;s[0]=t-r*h,s[4]=-n*l,s[8]=e+i*h,s[1]=i+e*h,s[5]=n*c,s[9]=r-t*h,s[2]=-n*o,s[6]=h,s[10]=n*a}else if("ZYX"===t.order){const t=n*c,i=n*l,e=h*c,r=h*l;s[0]=a*c,s[4]=e*o-i,s[8]=t*o+r,s[1]=a*l,s[5]=r*o+t,s[9]=i*o-e,s[2]=-o,s[6]=h*a,s[10]=n*a}else if("YZX"===t.order){const t=n*a,i=n*o,e=h*a,r=h*o;s[0]=a*c,s[4]=r-t*l,s[8]=e*l+i,s[1]=l,s[5]=n*c,s[9]=-h*c,s[2]=-o*c,s[6]=i*l+e,s[10]=t-r*l}else if("XZY"===t.order){const t=n*a,i=n*o,e=h*a,r=h*o;s[0]=a*c,s[4]=-l,s[8]=o*c,s[1]=t*l+r,s[5]=n*c,s[9]=i*l-e,s[2]=e*l-i,s[6]=h*c,s[10]=r*l+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ir,t,er)}lookAt(t,s,i){const e=this.elements;return hr.subVectors(t,s),0===hr.lengthSq()&&(hr.z=1),hr.normalize(),rr.crossVectors(i,hr),0===rr.lengthSq()&&(1===Math.abs(i.z)?hr.x+=1e-4:hr.z+=1e-4,hr.normalize(),rr.crossVectors(i,hr)),rr.normalize(),nr.crossVectors(hr,rr),e[0]=rr.x,e[4]=nr.x,e[8]=hr.x,e[1]=rr.y,e[5]=nr.y,e[9]=hr.y,e[2]=rr.z,e[6]=nr.z,e[10]=hr.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],h=i[4],a=i[8],o=i[12],c=i[1],l=i[5],u=i[9],m=i[13],y=i[2],d=i[6],x=i[10],p=i[14],M=i[3],g=i[7],f=i[11],z=i[15],_=e[0],w=e[4],b=e[8],S=e[12],k=e[1],C=e[5],V=e[9],P=e[13],T=e[2],q=e[6],A=e[10],E=e[14],F=e[3],v=e[7],B=e[11],R=e[15];return r[0]=n*_+h*k+a*T+o*F,r[4]=n*w+h*C+a*q+o*v,r[8]=n*b+h*V+a*A+o*B,r[12]=n*S+h*P+a*E+o*R,r[1]=c*_+l*k+u*T+m*F,r[5]=c*w+l*C+u*q+m*v,r[9]=c*b+l*V+u*A+m*B,r[13]=c*S+l*P+u*E+m*R,r[2]=y*_+d*k+x*T+p*F,r[6]=y*w+d*C+x*q+p*v,r[10]=y*b+d*V+x*A+p*B,r[14]=y*S+d*P+x*E+p*R,r[3]=M*_+g*k+f*T+z*F,r[7]=M*w+g*C+f*q+z*v,r[11]=M*b+g*V+f*A+z*B,r[15]=M*S+g*P+f*E+z*R,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],e=t[8],r=t[12],n=t[1],h=t[5],a=t[9],o=t[13],c=t[2],l=t[6],u=t[10],m=t[14];return t[3]*(+r*a*l-e*o*l-r*h*u+i*o*u+e*h*m-i*a*m)+t[7]*(+s*a*m-s*o*u+r*n*u-e*n*m+e*o*c-r*a*c)+t[11]*(+s*o*l-s*h*m-r*n*l+i*n*m+r*h*c-i*o*c)+t[15]*(-e*h*c-s*a*l+s*h*u+e*n*l-i*n*u+i*a*c)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=s,e[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],c=t[8],l=t[9],u=t[10],m=t[11],y=t[12],d=t[13],x=t[14],p=t[15],M=l*x*o-d*u*o+d*a*m-h*x*m-l*a*p+h*u*p,g=y*u*o-c*x*o-y*a*m+n*x*m+c*a*p-n*u*p,f=c*d*o-y*l*o+y*h*m-n*d*m-c*h*p+n*l*p,z=y*l*a-c*d*a-y*h*u+n*d*u+c*h*x-n*l*x,_=s*M+i*g+e*f+r*z;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/_;return t[0]=M*w,t[1]=(d*u*r-l*x*r-d*e*m+i*x*m+l*e*p-i*u*p)*w,t[2]=(h*x*r-d*a*r+d*e*o-i*x*o-h*e*p+i*a*p)*w,t[3]=(l*a*r-h*u*r-l*e*o+i*u*o+h*e*m-i*a*m)*w,t[4]=g*w,t[5]=(c*x*r-y*u*r+y*e*m-s*x*m-c*e*p+s*u*p)*w,t[6]=(y*a*r-n*x*r-y*e*o+s*x*o+n*e*p-s*a*p)*w,t[7]=(n*u*r-c*a*r+c*e*o-s*u*o-n*e*m+s*a*m)*w,t[8]=f*w,t[9]=(y*l*r-c*d*r-y*i*m+s*d*m+c*i*p-s*l*p)*w,t[10]=(n*d*r-y*h*r+y*i*o-s*d*o-n*i*p+s*h*p)*w,t[11]=(c*h*r-n*l*r-c*i*o+s*l*o+n*i*m-s*h*m)*w,t[12]=z*w,t[13]=(c*d*e-y*l*e+y*i*u-s*d*u-c*i*x+s*l*x)*w,t[14]=(y*h*e-n*d*e-y*i*a+s*d*a+n*i*x-s*h*x)*w,t[15]=(n*l*e-c*h*e+c*i*a-s*l*a-n*i*u+s*h*u)*w,this}scale(t){const s=this.elements,i=t.x,e=t.y,r=t.z;return s[0]*=i,s[4]*=e,s[8]*=r,s[1]*=i,s[5]*=e,s[9]*=r,s[2]*=i,s[6]*=e,s[10]*=r,s[3]*=i,s[7]*=e,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,e))}makeTranslation(t,s,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),e=Math.sin(s),r=1-i,n=t.x,h=t.y,a=t.z,o=r*n,c=r*h;return this.set(o*n+i,o*h-e*a,o*a+e*h,0,o*h+e*a,c*h+i,c*a-e*n,0,o*a-e*h,c*a+e*n,r*a*a+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,e,r,n){return this.set(1,i,r,0,t,1,n,0,s,e,1,0,0,0,0,1),this}compose(t,s,i){const e=this.elements,r=s._x,n=s._y,h=s._z,a=s._w,o=r+r,c=n+n,l=h+h,u=r*o,m=r*c,y=r*l,d=n*c,x=n*l,p=h*l,M=a*o,g=a*c,f=a*l,z=i.x,_=i.y,w=i.z;return e[0]=(1-(d+p))*z,e[1]=(m+f)*z,e[2]=(y-g)*z,e[3]=0,e[4]=(m-f)*_,e[5]=(1-(u+p))*_,e[6]=(x+M)*_,e[7]=0,e[8]=(y+g)*w,e[9]=(x-M)*w,e[10]=(1-(u+d))*w,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,s,i){const e=this.elements;let r=tr.set(e[0],e[1],e[2]).length();const n=tr.set(e[4],e[5],e[6]).length(),h=tr.set(e[8],e[9],e[10]).length();this.determinant()<0&&(r=-r),t.x=e[12],t.y=e[13],t.z=e[14],sr.copy(this);const a=1/r,o=1/n,c=1/h;return sr.elements[0]*=a,sr.elements[1]*=a,sr.elements[2]*=a,sr.elements[4]*=o,sr.elements[5]*=o,sr.elements[6]*=o,sr.elements[8]*=c,sr.elements[9]*=c,sr.elements[10]*=c,s.setFromRotationMatrix(sr),i.x=r,i.y=n,i.z=h,this}makePerspective(t,s,i,e,r,n,h=2e3){const a=this.elements,o=2*r/(s-t),c=2*r/(i-e),l=(s+t)/(s-t),u=(i+e)/(i-e);let m,y;if(h===Yi)m=-(n+r)/(n-r),y=-2*n*r/(n-r);else{if(h!==Ni)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+h);m=-n/(n-r),y=-n*r/(n-r)}return a[0]=o,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=m,a[14]=y,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,s,i,e,r,n,h=2e3){const a=this.elements,o=1/(s-t),c=1/(i-e),l=1/(n-r),u=(s+t)*o,m=(i+e)*c;let y,d;if(h===Yi)y=(n+r)*l,d=-2*l;else{if(h!==Ni)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+h);y=r*l,d=-1*l}return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-m,a[2]=0,a[6]=0,a[10]=d,a[14]=-y,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let t=0;t<16;t++)if(s[t]!==i[t])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}const tr=new se,sr=new Ke,ir=new se(0,0,0),er=new se(1,1,1),rr=new se,nr=new se,hr=new se;class ar{constructor(t,s,i,e){ar.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==t&&this.set(t,s,i,e)}identity(){return this.set(1,0,0,1),this}fromArray(t,s=0){for(let i=0;i<4;i++)this.elements[i]=t[i+s];return this}set(t,s,i,e){const r=this.elements;return r[0]=t,r[2]=s,r[1]=i,r[3]=e,this}}class or{constructor(t=0,s=0){or.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6],this.y=e[1]*s+e[4]*i+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(Wi(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),e=Math.sin(s),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*e+t.x,this.y=r*e+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}const cr=new or;class lr{constructor(t=new or(1/0,1/0),s=new or(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=cr.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,cr).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ur=new se,mr=new se;class yr{constructor(t=new se,s=new se){this.start=t,this.end=s}set(t,s){return this.start.copy(t),this.end.copy(s),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,s){return this.delta(s).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,s){ur.subVectors(t,this.start),mr.subVectors(this.end,this.start);const i=mr.dot(mr);let e=mr.dot(ur)/i;return s&&(e=Wi(e,0,1)),e}closestPointToPoint(t,s,i){const e=this.closestPointToPointParameter(t,s);return this.delta(i).multiplyScalar(e).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const dr=new Ke,xr=new Ui;class pr{constructor(t=0,s=0,i=0,e=pr.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=s,this._z=i,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,e=this._order){return this._x=t,this._y=s,this._z=i,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const e=t.elements,r=e[0],n=e[4],h=e[8],a=e[1],o=e[5],c=e[9],l=e[2],u=e[6],m=e[10];switch(s){case"XYZ":this._y=Math.asin(Wi(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-c,m),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Wi(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(h,m),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-l,r),this._z=0);break;case"ZXY":this._x=Math.asin(Wi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-l,m),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(a,r));break;case"ZYX":this._y=Math.asin(-Wi(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(u,m),this._z=Math.atan2(a,r)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(Wi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,o),this._y=Math.atan2(-l,r)):(this._x=0,this._y=Math.atan2(h,m));break;case"XZY":this._z=Math.asin(-Wi(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(h,r)):(this._x=Math.atan2(-c,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return dr.makeRotationFromQuaternion(t),this.setFromRotationMatrix(dr,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return xr.setFromEuler(this),this.setFromQuaternion(xr,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}pr.DEFAULT_ORDER="XYZ";class Mr{constructor(t=0,s=0,i=0,e=1){Mr.prototype.isVector4=!0,this.x=t,this.y=s,this.z=i,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,e){return this.x=t,this.y=s,this.z=i,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=this.w,n=t.elements;return this.x=n[0]*s+n[4]*i+n[8]*e+n[12]*r,this.y=n[1]*s+n[5]*i+n[9]*e+n[13]*r,this.z=n[2]*s+n[6]*i+n[10]*e+n[14]*r,this.w=n[3]*s+n[7]*i+n[11]*e+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,e,r;const n=.01,h=.1,a=t.elements,o=a[0],c=a[4],l=a[8],u=a[1],m=a[5],y=a[9],d=a[2],x=a[6],p=a[10];if(Math.abs(c-u)<n&&Math.abs(l-d)<n&&Math.abs(y-x)<n){if(Math.abs(c+u)<h&&Math.abs(l+d)<h&&Math.abs(y+x)<h&&Math.abs(o+m+p-3)<h)return this.set(1,0,0,0),this;s=Math.PI;const t=(o+1)/2,a=(m+1)/2,M=(p+1)/2,g=(c+u)/4,f=(l+d)/4,z=(y+x)/4;return t>a&&t>M?t<n?(i=0,e=.707106781,r=.707106781):(i=Math.sqrt(t),e=g/i,r=f/i):a>M?a<n?(i=.707106781,e=0,r=.707106781):(e=Math.sqrt(a),i=g/e,r=z/e):M<n?(i=.707106781,e=.707106781,r=0):(r=Math.sqrt(M),i=f/r,e=z/r),this.set(i,e,r,s),this}let M=Math.sqrt((x-y)*(x-y)+(l-d)*(l-d)+(u-c)*(u-c));return Math.abs(M)<.001&&(M=1),this.x=(x-y)/M,this.y=(l-d)/M,this.z=(u-c)/M,this.w=Math.acos((o+m+p-1)/2),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this.w=s[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}const gr=(new Me).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),fr=(new Me).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),zr={[$s]:{transfer:ti,primaries:ii,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t,fromReference:t=>t},[Us]:{transfer:si,primaries:ii,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[Ks]:{transfer:ti,primaries:ei,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.applyMatrix3(fr),fromReference:t=>t.applyMatrix3(gr)},[Js]:{transfer:si,primaries:ei,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.convertSRGBToLinear().applyMatrix3(fr),fromReference:t=>t.applyMatrix3(gr).convertLinearToSRGB()}},_r=new Set([$s,Ks]),wr={enabled:!0,_workingColorSpace:$s,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!_r.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,s,i){if(!1===this.enabled||s===i||!s||!i)return t;const e=zr[s].toReference;return(0,zr[i].fromReference)(e(t))},fromWorkingColorSpace:function(t,s){return this.convert(t,this._workingColorSpace,s)},toWorkingColorSpace:function(t,s){return this.convert(t,s,this._workingColorSpace)},getPrimaries:function(t){return zr[t].primaries},getTransfer:function(t){return""===t?ti:zr[t].transfer},getLuminanceCoefficients:function(t,s=this._workingColorSpace){return t.fromArray(zr[s].luminanceCoefficients)}};function br(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Sr(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const kr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Cr={h:0,s:0,l:0},Vr={h:0,s:0,l:0};function Pr(t,s,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(s-t)*i:i<.5?s:i<2/3?t+6*(s-t)*(2/3-i):t}class Tr{constructor(t,s,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,s,i)}set(t,s,i){if(void 0===s&&void 0===i){const s=t;s&&s.isColor?this.copy(s):"number"==typeof s?this.setHex(s):"string"==typeof s&&this.setStyle(s)}else this.setRGB(t,s,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,s=Us){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,wr.toWorkingColorSpace(this,s),this}setRGB(t,s,i,e=wr.workingColorSpace){return this.r=t,this.g=s,this.b=i,wr.toWorkingColorSpace(this,e),this}setHSL(t,s,i,e=wr.workingColorSpace){if(t=Gi(t,1),s=Wi(s,0,1),i=Wi(i,0,1),0===s)this.r=this.g=this.b=i;else{const e=i<=.5?i*(1+s):i+s-i*s,r=2*i-e;this.r=Pr(r,e,t+1/3),this.g=Pr(r,e,t),this.b=Pr(r,e,t-1/3)}return wr.toWorkingColorSpace(this,e),this}setStyle(t,s=Us){function i(s){void 0!==s&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let e;if(e=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const n=e[1],h=e[2];switch(n){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,s);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,s);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,s);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(t)){const i=e[1],r=i.length;if(3===r)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,s);if(6===r)return this.setHex(parseInt(i,16),s);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,s);return this}setColorName(t,s=Us){const i=kr[t.toLowerCase()];return void 0!==i?this.setHex(i,s):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=br(t.r),this.g=br(t.g),this.b=br(t.b),this}copyLinearToSRGB(t){return this.r=Sr(t.r),this.g=Sr(t.g),this.b=Sr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Us){return wr.fromWorkingColorSpace(qr.copy(this),t),65536*Math.round(Wi(255*qr.r,0,255))+256*Math.round(Wi(255*qr.g,0,255))+Math.round(Wi(255*qr.b,0,255))}getHexString(t=Us){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,s=wr.workingColorSpace){wr.fromWorkingColorSpace(qr.copy(this),s);const i=qr.r,e=qr.g,r=qr.b,n=Math.max(i,e,r),h=Math.min(i,e,r);let a,o;const c=(h+n)/2;if(h===n)a=0,o=0;else{const t=n-h;switch(o=c<=.5?t/(n+h):t/(2-n-h),n){case i:a=(e-r)/t+(e<r?6:0);break;case e:a=(r-i)/t+2;break;case r:a=(i-e)/t+4}a/=6}return t.h=a,t.s=o,t.l=c,t}getRGB(t,s=wr.workingColorSpace){return wr.fromWorkingColorSpace(qr.copy(this),s),t.r=qr.r,t.g=qr.g,t.b=qr.b,t}getStyle(t=Us){wr.fromWorkingColorSpace(qr.copy(this),t);const s=qr.r,i=qr.g,e=qr.b;return t!==Us?`color(${t} ${s.toFixed(3)} ${i.toFixed(3)} ${e.toFixed(3)})`:`rgb(${Math.round(255*s)},${Math.round(255*i)},${Math.round(255*e)})`}offsetHSL(t,s,i){return this.getHSL(Cr),this.setHSL(Cr.h+t,Cr.s+s,Cr.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,i){return this.r=t.r+(s.r-t.r)*i,this.g=t.g+(s.g-t.g)*i,this.b=t.b+(s.b-t.b)*i,this}lerpHSL(t,s){this.getHSL(Cr),t.getHSL(Vr);const i=ji(Cr.h,Vr.h,s),e=ji(Cr.s,Vr.s,s),r=ji(Cr.l,Vr.l,s);return this.setHSL(i,e,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const s=this.r,i=this.g,e=this.b,r=t.elements;return this.r=r[0]*s+r[3]*i+r[6]*e,this.g=r[1]*s+r[4]*i+r[7]*e,this.b=r[2]*s+r[5]*i+r[8]*e,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}fromBufferAttribute(t,s){return this.r=t.getX(s),this.g=t.getY(s),this.b=t.getZ(s),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const qr=new Tr;Tr.NAMES=kr;class Ar{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new se)}set(t){for(let s=0;s<9;s++)this.coefficients[s].copy(t[s]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,s){const i=t.x,e=t.y,r=t.z,n=this.coefficients;return s.copy(n[0]).multiplyScalar(.282095),s.addScaledVector(n[1],.488603*e),s.addScaledVector(n[2],.488603*r),s.addScaledVector(n[3],.488603*i),s.addScaledVector(n[4],i*e*1.092548),s.addScaledVector(n[5],e*r*1.092548),s.addScaledVector(n[6],.315392*(3*r*r-1)),s.addScaledVector(n[7],i*r*1.092548),s.addScaledVector(n[8],.546274*(i*i-e*e)),s}getIrradianceAt(t,s){const i=t.x,e=t.y,r=t.z,n=this.coefficients;return s.copy(n[0]).multiplyScalar(.886227),s.addScaledVector(n[1],1.023328*e),s.addScaledVector(n[2],1.023328*r),s.addScaledVector(n[3],1.023328*i),s.addScaledVector(n[4],.858086*i*e),s.addScaledVector(n[5],.858086*e*r),s.addScaledVector(n[6],.743125*r*r-.247708),s.addScaledVector(n[7],.858086*i*r),s.addScaledVector(n[8],.429043*(i*i-e*e)),s}add(t){for(let s=0;s<9;s++)this.coefficients[s].add(t.coefficients[s]);return this}addScaledSH(t,s){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],s);return this}scale(t){for(let s=0;s<9;s++)this.coefficients[s].multiplyScalar(t);return this}lerp(t,s){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],s);return this}equals(t){for(let s=0;s<9;s++)if(!this.coefficients[s].equals(t.coefficients[s]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,s=0){const i=this.coefficients;for(let e=0;e<9;e++)i[e].fromArray(t,s+3*e);return this}toArray(t=[],s=0){const i=this.coefficients;for(let e=0;e<9;e++)i[e].toArray(t,s+3*e);return t}static getBasisAt(t,s){const i=t.x,e=t.y,r=t.z;s[0]=.282095,s[1]=.488603*e,s[2]=.488603*r,s[3]=.488603*i,s[4]=1.092548*i*e,s[5]=1.092548*e*r,s[6]=.315392*(3*r*r-1),s[7]=1.092548*i*r,s[8]=.546274*(i*i-e*e)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t);export{st as ACESFilmicToneMapping,z as AddEquation,U as AddOperation,Ys as AdditiveAnimationBlendMode,p as AdditiveBlending,et as AgXToneMapping,Lt as AlphaFormat,Vi as AlwaysCompare,H as AlwaysDepth,fi as AlwaysStencilFunc,nt as AttachedBindMode,m as BackSide,Xs as BasicDepthPacking,a as BasicShadowMap,lr as Box2,be as Box3,Vt as ByteType,tt as CineonToneMapping,dt as ClampToEdgeWrapping,Tr as Color,wr as ColorManagement,L as ConstantAlphaFactor,R as ConstantColorFactor,ot as CubeReflectionMapping,ct as CubeRefractionMapping,mt as CubeUVReflectionMapping,te as CubicInterpolant,r as CullFaceBack,n as CullFaceFront,h as CullFaceFrontBack,e as CullFaceNone,f as CustomBlending,it as CustomToneMapping,pe as Cylindrical,oi as DecrementStencilOp,li as DecrementWrapStencilOp,Xt as DepthFormat,Ot as DepthStencilFormat,ht as DetachedBindMode,Ki as DiscreteInterpolant,Js as DisplayP3ColorSpace,y as DoubleSide,A as DstAlphaFactor,F as DstColorFactor,Bi as DynamicCopyUsage,Ti as DynamicDrawUsage,Ei as DynamicReadUsage,wi as EqualCompare,O as EqualDepth,di as EqualStencilFunc,lt as EquirectangularReflectionMapping,ut as EquirectangularRefractionMapping,pr as Euler,Et as FloatType,u as FrontSide,Oe as Frustum,Ii as GLSL1,Li as GLSL3,Si as GreaterCompare,W as GreaterDepth,Ci as GreaterEqualCompare,D as GreaterEqualDepth,gi as GreaterEqualStencilFunc,pi as GreaterStencilFunc,Ft as HalfFloatType,ai as IncrementStencilOp,ci as IncrementWrapStencilOp,qt as IntType,Hi as Interpolant,Es as InterpolateDiscrete,Fs as InterpolateLinear,vs as InterpolateSmooth,ui as InvertStencilOp,ni as KeepStencilOp,_i as LessCompare,Z as LessDepth,bi as LessEqualCompare,X as LessEqualDepth,xi as LessEqualStencilFunc,yi as LessStencilFunc,yr as Line3,Ks as LinearDisplayP3ColorSpace,_t as LinearFilter,Ji as LinearInterpolant,kt as LinearMipMapLinearFilter,bt as LinearMipMapNearestFilter,St as LinearMipmapLinearFilter,wt as LinearMipmapNearestFilter,$s as LinearSRGBColorSpace,J as LinearToneMapping,ti as LinearTransfer,Ts as LoopOnce,As as LoopPingPong,qs as LoopRepeat,Zt as LuminanceAlphaFormat,Ht as LuminanceFormat,s as MOUSE,Qi as MathUtils,ar as Matrix2,Me as Matrix3,Ke as Matrix4,S as MaxEquation,b as MinEquation,xt as MirroredRepeatWrapping,Q as MixOperation,g as MultiplyBlending,j as MultiplyOperation,pt as NearestFilter,zt as NearestMipMapLinearFilter,gt as NearestMipMapNearestFilter,ft as NearestMipmapLinearFilter,Mt as NearestMipmapNearestFilter,rt as NeutralToneMapping,zi as NeverCompare,N as NeverDepth,mi as NeverStencilFunc,d as NoBlending,Qs as NoColorSpace,$ as NoToneMapping,Ls as NormalAnimationBlendMode,x as NormalBlending,ki as NotEqualCompare,G as NotEqualDepth,Mi as NotEqualStencilFunc,js as ObjectSpaceNormalMap,C as OneFactor,Y as OneMinusConstantAlphaFactor,I as OneMinusConstantColorFactor,E as OneMinusDstAlphaFactor,v as OneMinusDstColorFactor,q as OneMinusSrcAlphaFactor,P as OneMinusSrcColorFactor,ei as P3Primaries,o as PCFShadowMap,c as PCFSoftShadowMap,we as Plane,Ui as Quaternion,$i as QuaternionLinearInterpolant,Vs as RED_GREEN_RGTC2_Format,ks as RED_RGTC1_Format,t as REVISION,Os as RGBADepthPacking,Nt as RGBAFormat,Ut as RGBAIntegerFormat,fs as RGBA_ASTC_10x10_Format,ps as RGBA_ASTC_10x5_Format,Ms as RGBA_ASTC_10x6_Format,gs as RGBA_ASTC_10x8_Format,zs as RGBA_ASTC_12x10_Format,_s as RGBA_ASTC_12x12_Format,os as RGBA_ASTC_4x4_Format,cs as RGBA_ASTC_5x4_Format,ls as RGBA_ASTC_5x5_Format,us as RGBA_ASTC_6x5_Format,ms as RGBA_ASTC_6x6_Format,ys as RGBA_ASTC_8x5_Format,ds as RGBA_ASTC_8x6_Format,xs as RGBA_ASTC_8x8_Format,ws as RGBA_BPTC_Format,as as RGBA_ETC2_EAC_Format,rs as RGBA_PVRTC_2BPPV1_Format,es as RGBA_PVRTC_4BPPV1_Format,Jt as RGBA_S3TC_DXT1_Format,Kt as RGBA_S3TC_DXT3_Format,ts as RGBA_S3TC_DXT5_Format,Ds as RGBDepthPacking,Yt as RGBFormat,Qt as RGBIntegerFormat,bs as RGB_BPTC_SIGNED_Format,Ss as RGB_BPTC_UNSIGNED_Format,ns as RGB_ETC1_Format,hs as RGB_ETC2_Format,is as RGB_PVRTC_2BPPV1_Format,ss as RGB_PVRTC_4BPPV1_Format,$t as RGB_S3TC_DXT1_Format,Ws as RGDepthPacking,Gt as RGFormat,jt as RGIntegerFormat,Je as Ray,ii as Rec709Primaries,Dt as RedFormat,Wt as RedIntegerFormat,K as ReinhardToneMapping,yt as RepeatWrapping,hi as ReplaceStencilOp,w as ReverseSubtractEquation,Ps as SIGNED_RED_GREEN_RGTC2_Format,Cs as SIGNED_RED_RGTC1_Format,Us as SRGBColorSpace,si as SRGBTransfer,Pt as ShortType,He as Sphere,xe as Spherical,Ar as SphericalHarmonics3,T as SrcAlphaFactor,B as SrcAlphaSaturateFactor,V as SrcColorFactor,vi as StaticCopyUsage,Pi as StaticDrawUsage,Ai as StaticReadUsage,Ri as StreamCopyUsage,qi as StreamDrawUsage,Fi as StreamReadUsage,_ as SubtractEquation,M as SubtractiveBlending,i as TOUCH,Gs as TangentSpaceNormalMap,de as Triangle,Zs as TriangleFanDrawMode,Hs as TriangleStripDrawMode,Ns as TrianglesDrawMode,at as UVMapping,Ct as UnsignedByteType,Rt as UnsignedInt248Type,It as UnsignedInt5999Type,At as UnsignedIntType,vt as UnsignedShort4444Type,Bt as UnsignedShort5551Type,Tt as UnsignedShortType,l as VSMShadowMap,or as Vector2,se as Vector3,Mr as Vector4,Yi as WebGLCoordinateSystem,Ni as WebGPUCoordinateSystem,Is as WrapAroundEnding,Bs as ZeroCurvatureEnding,k as ZeroFactor,Rs as ZeroSlopeEnding,ri as ZeroStencilOp};
